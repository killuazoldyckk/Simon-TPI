services:
  backend:
    build: ../backend
    container_name: simon-backend
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    volumes:
      - ../backend:/app
    environment:
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=simonadmin
      - MINIO_ROOT_PASSWORD=simonpassword 
      - MINIO_BUCKET_NAME=manifests
    # --- TAMBAHAN: Backend akan menunggu MinIO siap ---
    depends_on:
      minio:
        condition: service_healthy # Tunggu sampai healthcheck minio sukses


  frontend:
    build: ../frontend
    container_name: simon-frontend
    command: npm run dev -- --host 0.0.0.0
    ports:
      - "5173:5173"
    volumes:
      - ../frontend:/app
      - /app/node_modules


  nginx:
    image: nginx:latest
    container_name: simon-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
      - frontend

  # --- TAMBAHAN: Service baru untuk MinIO ---
  minio:
    image: minio/minio:latest
    container_name: simon-minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9002:9001" 
    environment:
      - MINIO_ROOT_USER=simonadmin
      - MINIO_ROOT_PASSWORD=simonpassword
    volumes:
      - minio_data:/data
    # --- TAMBAHAN: Healthcheck untuk MinIO ---
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

# --- TAMBAHAN: Definisi volume untuk persistensi data MinIO ---
volumes:
  minio_data:
